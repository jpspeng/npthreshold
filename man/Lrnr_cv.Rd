% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Lrnr_cv.R
\docType{class}
\name{Lrnr_cv}
\alias{Lrnr_cv}
\title{Fit/Predict a learner with Cross Validation}
\format{
\code{\link{R6Class}} object.
}
\value{
Learner object with methods for training and prediction. See
 \code{\link{Lrnr_base}} for documentation on learners.
}
\description{
A wrapper around any learner that generates cross-validate predictions
}
\section{Parameters}{

\describe{
  \item{\code{learner}}{The learner to wrap}
  \item{\code{folds=NULL}}{An \code{origami} folds object. If \code{NULL},
   folds from the task are used}
  \item{\code{full_fit=FALSE}}{If \code{TRUE}, also fit the underlying learner on the full data.
  This can then be accessed with predict_fold(task, fold_number="full")
  }
}
}

\examples{
library(origami)

# load example data
data(cpp_imputed)
covars <- c(
  "apgar1", "apgar5", "parity", "gagebrth", "mage", "meducyrs", "sexn"
)
outcome <- "haz"

# create sl3 task
task <- sl3_Task$new(cpp_imputed, covariates = covars, outcome = outcome)
glm_learner <- Lrnr_glm$new()
cv_glm <- Lrnr_cv$new(glm_learner, folds = make_folds(cpp_imputed, V = 10))

# train cv learner
cv_glm_fit <- cv_glm$train(task)
preds <- cv_glm_fit$predict()
}
\seealso{
Other Learners: 
\code{\link{Lrnr_independent_binomial}}
}
\concept{Learners}
\keyword{data}
\section{Super class}{
\code{\link[sl3:Lrnr_base]{sl3::Lrnr_base}} -> \code{Lrnr_cv}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Lrnr_cv-new}{\code{Lrnr_cv$new()}}
\item \href{#method-Lrnr_cv-cv_risk}{\code{Lrnr_cv$cv_risk()}}
\item \href{#method-Lrnr_cv-print}{\code{Lrnr_cv$print()}}
\item \href{#method-Lrnr_cv-predict_fold}{\code{Lrnr_cv$predict_fold()}}
\item \href{#method-Lrnr_cv-chain_fold}{\code{Lrnr_cv$chain_fold()}}
\item \href{#method-Lrnr_cv-update}{\code{Lrnr_cv$update()}}
\item \href{#method-Lrnr_cv-clone}{\code{Lrnr_cv$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="sl3" data-topic="Lrnr_base" data-id="assert_trained"><a href='../../sl3/html/Lrnr_base.html#method-Lrnr_base-assert_trained'><code>sl3::Lrnr_base$assert_trained()</code></a></li>
<li><span class="pkg-link" data-pkg="sl3" data-topic="Lrnr_base" data-id="base_chain"><a href='../../sl3/html/Lrnr_base.html#method-Lrnr_base-base_chain'><code>sl3::Lrnr_base$base_chain()</code></a></li>
<li><span class="pkg-link" data-pkg="sl3" data-topic="Lrnr_base" data-id="base_predict"><a href='../../sl3/html/Lrnr_base.html#method-Lrnr_base-base_predict'><code>sl3::Lrnr_base$base_predict()</code></a></li>
<li><span class="pkg-link" data-pkg="sl3" data-topic="Lrnr_base" data-id="base_train"><a href='../../sl3/html/Lrnr_base.html#method-Lrnr_base-base_train'><code>sl3::Lrnr_base$base_train()</code></a></li>
<li><span class="pkg-link" data-pkg="sl3" data-topic="Lrnr_base" data-id="chain"><a href='../../sl3/html/Lrnr_base.html#method-Lrnr_base-chain'><code>sl3::Lrnr_base$chain()</code></a></li>
<li><span class="pkg-link" data-pkg="sl3" data-topic="Lrnr_base" data-id="custom_chain"><a href='../../sl3/html/Lrnr_base.html#method-Lrnr_base-custom_chain'><code>sl3::Lrnr_base$custom_chain()</code></a></li>
<li><span class="pkg-link" data-pkg="sl3" data-topic="Lrnr_base" data-id="get_outcome_range"><a href='../../sl3/html/Lrnr_base.html#method-Lrnr_base-get_outcome_range'><code>sl3::Lrnr_base$get_outcome_range()</code></a></li>
<li><span class="pkg-link" data-pkg="sl3" data-topic="Lrnr_base" data-id="get_outcome_type"><a href='../../sl3/html/Lrnr_base.html#method-Lrnr_base-get_outcome_type'><code>sl3::Lrnr_base$get_outcome_type()</code></a></li>
<li><span class="pkg-link" data-pkg="sl3" data-topic="Lrnr_base" data-id="predict"><a href='../../sl3/html/Lrnr_base.html#method-Lrnr_base-predict'><code>sl3::Lrnr_base$predict()</code></a></li>
<li><span class="pkg-link" data-pkg="sl3" data-topic="Lrnr_base" data-id="process_formula"><a href='../../sl3/html/Lrnr_base.html#method-Lrnr_base-process_formula'><code>sl3::Lrnr_base$process_formula()</code></a></li>
<li><span class="pkg-link" data-pkg="sl3" data-topic="Lrnr_base" data-id="reparameterize"><a href='../../sl3/html/Lrnr_base.html#method-Lrnr_base-reparameterize'><code>sl3::Lrnr_base$reparameterize()</code></a></li>
<li><span class="pkg-link" data-pkg="sl3" data-topic="Lrnr_base" data-id="retrain"><a href='../../sl3/html/Lrnr_base.html#method-Lrnr_base-retrain'><code>sl3::Lrnr_base$retrain()</code></a></li>
<li><span class="pkg-link" data-pkg="sl3" data-topic="Lrnr_base" data-id="sample"><a href='../../sl3/html/Lrnr_base.html#method-Lrnr_base-sample'><code>sl3::Lrnr_base$sample()</code></a></li>
<li><span class="pkg-link" data-pkg="sl3" data-topic="Lrnr_base" data-id="set_train"><a href='../../sl3/html/Lrnr_base.html#method-Lrnr_base-set_train'><code>sl3::Lrnr_base$set_train()</code></a></li>
<li><span class="pkg-link" data-pkg="sl3" data-topic="Lrnr_base" data-id="subset_covariates"><a href='../../sl3/html/Lrnr_base.html#method-Lrnr_base-subset_covariates'><code>sl3::Lrnr_base$subset_covariates()</code></a></li>
<li><span class="pkg-link" data-pkg="sl3" data-topic="Lrnr_base" data-id="train"><a href='../../sl3/html/Lrnr_base.html#method-Lrnr_base-train'><code>sl3::Lrnr_base$train()</code></a></li>
<li><span class="pkg-link" data-pkg="sl3" data-topic="Lrnr_base" data-id="train_sublearners"><a href='../../sl3/html/Lrnr_base.html#method-Lrnr_base-train_sublearners'><code>sl3::Lrnr_base$train_sublearners()</code></a></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Lrnr_cv-new"></a>}}
\if{latex}{\out{\hypertarget{method-Lrnr_cv-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Lrnr_cv$new(learner, folds = NULL, full_fit = FALSE, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Lrnr_cv-cv_risk"></a>}}
\if{latex}{\out{\hypertarget{method-Lrnr_cv-cv_risk}{}}}
\subsection{Method \code{cv_risk()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Lrnr_cv$cv_risk(eval_fun)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Lrnr_cv-print"></a>}}
\if{latex}{\out{\hypertarget{method-Lrnr_cv-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Lrnr_cv$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Lrnr_cv-predict_fold"></a>}}
\if{latex}{\out{\hypertarget{method-Lrnr_cv-predict_fold}{}}}
\subsection{Method \code{predict_fold()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Lrnr_cv$predict_fold(task, fold_number = "validation", pred_unique_ts = FALSE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Lrnr_cv-chain_fold"></a>}}
\if{latex}{\out{\hypertarget{method-Lrnr_cv-chain_fold}{}}}
\subsection{Method \code{chain_fold()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Lrnr_cv$chain_fold(task, fold_number = "validation")}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Lrnr_cv-update"></a>}}
\if{latex}{\out{\hypertarget{method-Lrnr_cv-update}{}}}
\subsection{Method \code{update()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Lrnr_cv$update(task, drop_old = FALSE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Lrnr_cv-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Lrnr_cv-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Lrnr_cv$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
